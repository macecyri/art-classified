3.2.11 (Media Mark)
02a1a81102cc6857a82cd5c56913b180ff78daa0
o:Sass::Tree::RootNode
:@template"û*//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

// Used to provide media query values for javascript components.
meta.foundation-mq-small {
  font-family: $small;
  width: $small-screen;
}

meta.foundation-mq-medium {
  font-family: $medium;
  width: $medium-screen;
}

meta.foundation-mq-large {
  font-family: $large;
  width: $large-screen;
}

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@has_childrenT:@options{ :@children[Zo:Sass::Tree::CommentNode
:
@type:silent:@value[")/*
 * Global Foundation Mixins
 * */;@;	[ :
@lineio:Sass::Tree::VariableNode:@guarded"!default:
@name"experimental:
@expro:Sass::Script::Bool;T;@;i
;@;	[ ;i
o;

;;;["0/* We use this to control border radius. */;@;	[ ;io:Sass::Tree::MixinDefNode;"radius;T;@;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@options{ :@underscored_name"radius:
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode;["-webkit-border-radius:@valueo; 	;"radius;@;"radius;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	io:Sass::Tree::PropNode;["border-radius:@valueo; 	;"radius;@;"radius;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	i:@splat0;i:
@args[[o:Sass::Script::Variable;"radius;@:@underscored_name"radiuso;	;"global-radius;@;"global_radius;io;

;;;["F/* We use this to create equal side border radius on elements. */;@;	[ ;io;;"side-radius;T;@;	[u;õ[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei;@	;i:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@	;iu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei";@	;i":@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@	;i"u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei,;@	;i,:@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@	;i,u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei6;@	;i6:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@	;i60[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei70[	o:Sass::Tree::PropNode;["#-moz-border-radius-bottomright:@valueo; 	;"radius;@;"radius;	i8:@prop_syntax:new;@:
@tabsi :@children[ ;	i8o;
;[""-moz-border-radius-bottomleft;o; 	;"radius;@;"radius;	i9;;;@;i ;[ ;	i9o;
;["'-webkit-border-bottom-right-radius;o; 	;"radius;@;"radius;	i:;;;@;i ;[ ;	i:o;
;["&-webkit-border-bottom-left-radius;o; 	;"radius;@;"radius;	i;;;;@;i ;[ ;	i;o:Sass::Tree::PropNode;
["border-bottom-right-radius;o;		;
"radius;@	;"radius;i=:@prop_syntax:new;@	:
@tabsi :@children[ ;i=o;;
["border-bottom-left-radius;o;		;
"radius;@	;"radius;i>;;;@	;i ;[ ;i>[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei-0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright:@valueo; 	;"radius;@;"radius;	i.:@prop_syntax:new;@:
@tabsi :@children[ ;	i.o;
;["-moz-border-radius-topleft;o; 	;"radius;@;"radius;	i/;;;@;i ;[ ;	i/o;
;["$-webkit-border-top-right-radius;o; 	;"radius;@;"radius;	i0;;;@;i ;[ ;	i0o;
;["#-webkit-border-top-left-radius;o; 	;"radius;@;"radius;	i1;;;@;i ;[ ;	i1o:Sass::Tree::PropNode;
["border-top-right-radius;o;		;
"radius;@	;"radius;i3:@prop_syntax:new;@	:
@tabsi :@children[ ;i3o;;
["border-top-left-radius;o;		;
"radius;@	;"radius;i4;;;@	;i ;[ ;i4[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei#0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright:@valueo; 	;"radius;@;"radius;	i$:@prop_syntax:new;@:
@tabsi :@children[ ;	i$o;
;["#-moz-border-radius-bottomright;o; 	;"radius;@;"radius;	i%;;;@;i ;[ ;	i%o;
;["$-webkit-border-top-right-radius;o; 	;"radius;@;"radius;	i&;;;@;i ;[ ;	i&o;
;["'-webkit-border-bottom-right-radius;o; 	;"radius;@;"radius;	i';;;@;i ;[ ;	i'o:Sass::Tree::PropNode;
["border-top-right-radius;o;		;
"radius;@	;"radius;i):@prop_syntax:new;@	:
@tabsi :@children[ ;i)o;;
["border-bottom-right-radius;o;		;
"radius;@	;"radius;i*;;;@	;i ;[ ;i*[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[	o:Sass::Tree::PropNode;[""-moz-border-radius-bottomleft:@valueo; 	;"radius;@;"radius;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;["-moz-border-radius-topleft;o; 	;"radius;@;"radius;	i;;;@;i ;[ ;	io;
;["&-webkit-border-bottom-left-radius;o; 	;"radius;@;"radius;	i;;;@;i ;[ ;	io;
;["#-webkit-border-top-left-radius;o; 	;"radius;@;"radius;	i;;;@;i ;[ ;	io:Sass::Tree::PropNode;
["border-bottom-left-radius;o;		;
"radius;@	;"radius;i:@prop_syntax:new;@	:
@tabsi :@children[ ;io;;
["border-top-left-radius;o;		;
"radius;@	;"radius;i ;;;@	;i ;[ ;i ;0;i;[[o;;"	side;@;"	side0[o;;"radius;@;"radiuso;	;"global-radius;@;"global_radius;io;

;;;["E/* We can control whether or not we have inset shadows edges. */;@;	[ ;iBo;;"inset-shadow;T;@;	[u;¬[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiD0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iEo; 	;"shiny-edge-color;@;"shiny_edge_color;	iEo:Sass::Script::String	:
@type:identifier;"
inset;@;	iE;@;	iE:@prop_syntax:new;@:
@tabsi :@children[ ;	iEo:Sass::Tree::PropNode;["box-shadow;o:Sass::Script::List	:@separator:
space;[o;	;"shiny-edge-size;@;"shiny_edge_size;iGo;	;"shiny-edge-color;@;"shiny_edge_color;iGo:Sass::Script::String	;:identifier;"
inset;@;iG;@;iG:@prop_syntax:new;@:
@tabsi ;	[ ;iGu;ò[o:Sass::Script::Variable	:
@name"active:@options{ :@underscored_name"active:
@lineiI0[o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Parent:@filename" ;	iIo:Sass::Selector::Pseudo
;["active:	@arg0;@;	iI:@syntactic_type:
class:@sourceso:Set:
@hash{ ;@;	iI:@subject0;@;	iI:@has_childrenT;@:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiJ0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iKo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iKo:Sass::Script::String	:
@type:identifier;"
inset;@;	iK;@;	iK:@prop_syntax:new;@:
@tabsi :@children[ ;	iKo:Sass::Tree::PropNode;["box-shadow:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iMo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iMo:Sass::Script::String	:
@type:identifier;"
inset;@;	iM;@;	iM:@prop_syntax:new;@;i ;[ ;	iM;	iI:
@rule["&:active;0;iC;[[o;;"active;@;"activeo;;T;@;iCo;

;;;["5/* We use this to add transitions to elements */;@;	[ ;iPo;;"single-transition;T;@;	[u;	[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiR0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"property;@;"property;	iSo; 	;"
speed;@;"
speed;	iSo; 	;"	ease;@;"	ease;	iS;@;	iS:@prop_syntax:new;@:
@tabsi :@children[ ;	iSo;
;["-moz-transition;o;	;;;[o; 	;"property;@;"property;	iTo; 	;"
speed;@;"
speed;	iTo; 	;"	ease;@;"	ease;	iT;@;	iT;;;@;i ;[ ;	iTo;;["transition;o;	;;;[o;	;"property;@;"property;iVo;	;"
speed;@;"
speed;iVo;	;"	ease;@;"	ease;iV;@;iV; ;!;@;"i ;	[ ;iV;0;iQ;[[o;;"property;@;"propertyo;	;;;"all;@;iQ[o;;"
speed;@;"
speedo:Sass::Script::Number:@denominator_units[ ;i,;@:@numerator_units["ms:@original"
300ms;iQ[o;;"	ease;@;"	easeo;	;;;"ease-out;@;iQo;

;;;["@/* We use this to add box-sizing across browser prefixes */;@;	[ ;iYo;;"box-sizing;T;@;	[u;<[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei[0[o:Sass::Tree::PropNode;["-moz-box-sizing:@valueo; 	;"	type;@;"	type;	i\:@prop_syntax:new;@:
@tabsi :@children[ ;	i\o;
;["-webkit-box-sizing;o; 	;"	type;@;"	type;	i];;;@;i ;[ ;	i]o;;["box-sizing;o;	;"	type;@;"	type;i_; ;!;@;"i ;	[ ;i_;0;iZ;[[o;;"	type;@;"	typeo;	;;;"border-box;@;iZo;

;;;["6/* We use this to create equilateral triangles */;@;	[ ;ibo;;"css-triangle;T;@;	[o;;["content;o;;;;""";@; ;!;@;"i ;	[ ;ido;;["display;o;;;;"
block;@; ;!;@;"i ;	[ ;ieo;;["
width;o;;;;"0;@; ;!;@;"i ;	[ ;ifo;;["height;o;;;;"0;@; ;!;@;"i ;	[ ;igo;;["border;o;	;;;[o;	;;;"
inset;@;iho;	;"triangle-size;@;"triangle_size;ih;@;ih; ;!;@;"i ;	[ ;ihu;d[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineii;@	;ii:@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@	;ii0[o:Sass::Tree::PropNode;
["border-color;o:Sass::Script::List	:@separator:
space;[	o;		;
"triangle-color;@	;"triangle_color;ijo;	;;;"transparent;@	;ijo;	;;;"transparent;@	;ijo;	;;;"transparent;@	;ij;@	;ij:@prop_syntax:new;@	:
@tabsi :@children[ ;ijo;;
["border-top-style;o;;;;"
solid;@	;;;@	;i ;[ ;iku;j[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineim;@	;im:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@	;im0[o:Sass::Tree::PropNode;
["border-color;o:Sass::Script::List	:@separator:
space;[	o;	;;;"transparent;@	;ino;	;;;"transparent;@	;ino;		;
"triangle-color;@	;"triangle_color;ino;	;;;"transparent;@	;in;@	;in:@prop_syntax:new;@	:
@tabsi :@children[ ;ino;;
["border-bottom-style;o;;;;"
solid;@	;;;@	;i ;[ ;iou;f[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineiq;@	;iq:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@	;iq0[o:Sass::Tree::PropNode;
["border-color;o:Sass::Script::List	:@separator:
space;[	o;	;;;"transparent;@	;iro;	;;;"transparent;@	;iro;	;;;"transparent;@	;iro;		;
"triangle-color;@	;"triangle_color;ir;@	;ir:@prop_syntax:new;@	:
@tabsi :@children[ ;iro;;
["border-left-style;o;;;;"
solid;@	;;;@	;i ;[ ;isu;h[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineiu;@	;iu:@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@	;iu0[o:Sass::Tree::PropNode;
["border-color;o:Sass::Script::List	:@separator:
space;[	o;	;;;"transparent;@	;ivo;		;
"triangle-color;@	;"triangle_color;ivo;	;;;"transparent;@	;ivo;	;;;"transparent;@	;iv;@	;iv:@prop_syntax:new;@	:
@tabsi :@children[ ;ivo;;
["border-right-style;o;;;;"
solid;@	;;;@	;i ;[ ;iw;0;ic;[[o;;"triangle-size;@;"triangle_size0[o;;"triangle-color;@;"triangle_color0[o;;"triangle-direction;@;"triangle_direction0o;

;;;[")/* We use this to do clear floats */;@;	[ ;i{o;;"clearfix;T;@;	[o;;["
*zoom;o;;;;"1;@; ;!;@;"i ;	[ ;i}o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;*[o:#Sass::Selector::SimpleSequence
;*[o:Sass::Selector::Parent:@filename" ;i~o:Sass::Selector::Pseudo
;["before:	@arg0;.@á;i~:@syntactic_type:
class:@sourceso:Set:
@hash{ ;.@á;i~:@subject0o;+;*[o;,
;*[o;-;.@á;i~o;/
;["
after;00;.@á;i~;1;2;3o;4;5{ ;.@á;i~;60;.@á;i~;T;@;"i ;	[o;;["content;o;;;;"" ";@; ;!;@;"i ;	[ ;i~o;;["display;o;;;;"
table;@; ;!;@;"i ;	[ ;i~;i~:
@rule["&:before, &:aftero;';(o;);*[o;+;*[o;,
;*[o;-;." ;io;/
;["
after;00;.@;i;1;2;3o;4;5{ ;.@;i;60;.@;i;T;@;"i ;	[o;;["
clear;o;;;;"	both;@; ;!;@;"i ;	[ ;i;i;7["&:after;0;i|;[ o;

;;;["@/* We use this to add a glowing effect to block elements */;@;	[ ;i~o;;"block-glowing-effect;T;@;	[u;7[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	:@separator:
comma;[o;	;:
space;[o:Sass::Script::String	:
@type:identifier;"-webkit-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@;	io;	;;;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;	i;@;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;["-moz-transition;o;	;;;[o;	;;;[o;	;;;"-moz-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@;	io;	;;;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;	i;@;	i;;;@;i ;[ ;	io;;["transition;o;	;:
comma;[o;	;;;[o;	;;;"box-shadow;@;io;	;"fade-time;@;"fade_time;i;@;io;	;;;[o;	;;;"border-color;@;io;	;"fade-time;@;"fade_time;io;	;;;"ease-in-out;@;i;@;i;@;i; ;!;@;"i ;	[ ;io;';T;@;"i ;	[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[	o:Sass::Script::Number:@denominator_units[ ;i ;@:@numerator_units[ :@original"0;	io;;@;i ;@;[ ;"0;	io;;[ ;i
;@;["px;"5px;	io; 	;"glowing-effect-color;@;"glowing_effect_color;	i;@;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;["-moz-box-shadow;o;	;;;[	o;;@;i ;@;[ ;"0;	io;;@;i ;@;[ ;"0;	io;;[ ;i
;@;["px;"5px;	io; 	;"glowing-effect-color;@;"glowing_effect_color;	i;@;	i;;;@;i ;[ ;	io;;["box-shadow;o;	;;;[	o;#;$[ ;i ;@;%[ ;&"0;io;#;$@?;i ;@;%[ ;&"0;io;#;$[ ;i
;@;%["px;&"5px;io;	;"glowing-effect-color;@;"glowing_effect_color;i;@;i; ;!;@;"i ;	[ ;io;;["border-color;o;	;"glowing-effect-color;@;"glowing_effect_color;i; ;!;@;"i ;	[ ;i;i;7["&:o;	;"selector;@;"selector;i;0;i;[[o;;"selector;@;"selectoro;	;;;"
focus;@;i[o;;"fade-time;@;"fade_timeo;#;$[ ;i,;@;%["ms;&"
300ms;i[o;;"glowing-effect-color;@;"glowing_effect_coloro:Sass::Script::Funcall;"fade-out:@keywords{ ;@;0;i;[o;	;"primary-color;@;"primary_color;io;#;$@?;f	0.25;@;%[ ;&"	0.25;io;

;;;["%/*
 * Foundation Variables
 * */;@;	[ ;io;

;;;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;@;	[ ;io;

;;;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;@;	[ ;io;;"!default;"base-font-size;o;#;$[ ;ii;@;%["%;&"	100%;i;@;	[ ;io;

;;;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;	[ ;io;;"!default;"base-line-height;o;#;$[ ;i;@;%["%;&"	150%;i;@;	[ ;io;

;;;["M/* This is the default html and body font-size for the base em value. */;@;	[ ;io;;"!default;"em-base;o;#;$[ ;i;@;%["px;&"	16px;i ;@;	[ ;i o;

;;;["7/* It strips the unit of measure and returns it */;@;	[ ;i¢o:Sass::Tree::FunctionNode;"strip-unit;T;@;	[o:Sass::Tree::ReturnNode	;o:Sass::Script::Operation
:@operator:div:@operand1o;	;"num;@;"num;i¤;@;i¤:@operand2o;=
;>:	plus;@o;=
;>:
times;@o;	;"num;@;"num;i¤;@;i¤;Ao;#;$@?;i ;@;%[ ;&"0;i¤;@;i¤;Ao;#;$@?;i;@;%[ ;&"1;i¤;@;	[ ;i¤;0;i£;[[o;;"num;@;"num0o;

;;;["	/* New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
 * em-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 * em-calc((10, 20, 30, 40px));
 * Optionally call with a different base (eg: 8px) to calculate em.
 * em-calc(16px 32px 48px, 8px);
 * If you require to comma separate your list
 * em-calc((16px, 32px, 48), 8px); */;@;	[ ;i§o;;;"convert-to-em;T;@;	[	o;;0;"
value;o;=
;>;C;@o;=
;>;?;@o;9;"strip-unit;:{ ;@;0;i²;[o;	;"
value;@;"
value;i²;@;i²;Ao;9;"strip-unit;:{ ;@;0;i²;[o;	;"base-value;@;"base_value;i²;@;i²;Ao;#;$[ ;i;@;%["em;&"1em;i²;@;	[ ;i²u;|[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :@underscored_name"
value:
@linei³;@	;i³:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei ;@	:@numerator_units["em:@original"0em;i³0[o:Sass::Tree::VariableNode:@guarded0;
"
value:
@expro;;[ ;i ;@	;[ ;"0;i³;@	:@children[ ;i³o;

;;;["/* Turn 0em into 0 */;@;	[ ;i³o;<	;o;	;"
value;@;"
value;i´;@;	[ ;i´;0;i±;[[o;;"
value;@;"
value0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i±o;;;"em-calc;T;@;	[
o;;0;"max;o;9;"length;:{ ;@;0;i¸;[o;	;"values;@;"values;i¸;@;	[ ;i¸u;[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"max:@options{ :@underscored_name"max:
@lineiº;@	;iº:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;@	:@numerator_units[ :@original"1;iº0[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;
"convert-to-em:@keywords{ ;@	:@splat0;iº:
@args[o;;
"nth;{ ;@	;0;iº;[o;		;
"values;@	;"values;iºo;;@;i;@	;[ ;"1;iºo;		;
"base-value;@	;"base_value;iº;@	:@children[ ;iºo;;0;"emValues;o;	;;;[ ;@;i¼;@;	[ ;i¼o:Sass::Tree::ForNode:@exclusiveF:
@fromo;#;$@?;i;@;%[ ;&"1;i½;T;@:	@var"i;	[o;;0;"emValues;o;9;"append;:{ ;@;0;i¾;[o;	;"emValues;@;"emValues;i¾o;9;"convert-to-em;:{ ;@;0;i¾;[o;9;"nth;:{ ;@;0;i¾;[o;	;"values;@;"values;i¾o;	;"i;@;"i;i¾o;	;"base-value;@;"base_value;i¾;@;	[ ;i¾:@too;	;"max;@;"max;i½;i½o;<	;o;	;"emValues;@;"emValues;iÀ;@;	[ ;iÀ;0;i·;[[o;;"values;@;"values0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i·o;

;;;["%/* Support for the old syntax */;@;	[ ;iÃo;;;"emCalc;T;@;	[o;<	;o;9;"em-calc;:{ ;@;0;iÆ;[o;	;"values;@;"values;iÆ;@;	[ ;iÆ;0;iÅ;[[o;;"values;@;"values0o;

;;;["/* Maybe you want to create rems with pixels
 * $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $rem-base * 1rem;
 * } */;@;	[ ;iÉo;

;;;["8/* We use these to control various global styles */;@;	[ ;iÏo;;"!default;"body-bg;o:Sass::Script::Color	;0;@:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;iÐ;@;	[ ;iÐo;;"!default;"body-font-color;o;I	;0;@;J{	;Ki';Li;Mi';Ni';iÑ;@;	[ ;iÑo;;"!default;"body-font-family;o;	;;8;[
o;	;:string;"Helvetica Neue;@;iÒo;	;;O;"Helvetica;@;iÒo;	;;;"Helvetica;@;iÒo;	;;;"
Arial;@;iÒo;	;;;"sans-serif;@;iÒ;@;iÒ;@;	[ ;iÒo;;"!default;"body-font-weight;o;	;;;"normal;@;iÓ;@;	[ ;iÓo;;"!default;"body-font-style;o;	;;;"normal;@;iÔ;@;	[ ;iÔo;

;;;["0/* We use this to control font-smoothing */;@;	[ ;iÖo;;"!default;"font-smoothing;o;	;;;"subpixel-antialiased;@;i×;@;	[ ;i×o;

;;;[":/* We use these to control text direction settings */;@;	[ ;iÙo;;"!default;"text-direction;o;	;;;"ltr;@;iÚ;@;	[ ;iÚo;

;;;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;@;	[ ;iÜo;;"!default;"default-float;o;	;;;"	left;@;iÝ;@;	[ ;iÝo;;"!default;"opposite-direction;o;	;;;"
right;@;iÞ;@;	[ ;iÞu;¼[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"text-direction:@options{ :@underscored_name"text_direction:
@lineiß;@	;iß:@operand2o:Sass::Script::String	:
@type:identifier:@value"ltr;@	;ißu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:@guarded0:
@name"default-float:
@expro:Sass::Script::String	:
@type:identifier:@value"
right:@options{ :
@lineiã;@:@children[ ;ião; ;0;"opposite-direction;o;		;
;;"	left;@;iä;@;[ ;iä[o:Sass::Tree::VariableNode:@guarded0;
"default-float:
@expro;	;;;"	left;@	;ià;@	:@children[ ;iào;;0;
"opposite-direction;o;	;;;"
right;@	;iá;@	;[ ;iáo;

;;;["4/* We use these as default colors throughout */;@;	[ ;iço;;"!default;"primary-color;o;I	;0;@;J{	;Ki0;Li;Mi¦;NiË;iè;@;	[ ;ièo;;"!default;"secondary-color;o;I	;0;@;J{	;Kié;Li;Mié;Nié;ié;@;	[ ;iéo;;"!default;"alert-color;o;I	;0;@;J{	;KiÆ;Li;Mi;Ni;iê;@;	[ ;iêo;;"!default;"success-color;o;I	;0;@;J{	;Kib;Li;Mi¤;Ni(;ië;@;	[ ;iëo;

;;;["W/* We use these to make sure border radius matches unless we want it different. */;@;	[ ;iío;;"!default;"global-radius;o;#;$[ ;i;@;%["px;&"3px;iî;@;	[ ;iîo;;"!default;"global-rounded;o;#;$[ ;iè;@;%["px;&"1000px;iï;@;	[ ;iïo;

;;;["L/* We use these to control inset shadow shiny edges and depressions. */;@;	[ ;iño;;"!default;"shiny-edge-size;o;	;;;[o;#;$@?;i ;@;%[ ;&"0;iòo;#;$[ ;i;@;%["px;&"1px;iòo;#;$@?;i ;@;%[ ;&"0;iò;@;iò;@;	[ ;iòo;;"!default;"shiny-edge-color;o;9;"	rgba;:{ ;@;0;ió;[o;I	;0;@;J{	;Kiÿ;Li;Miÿ;Niÿ;ióo;#;$@?;f0.5;@;%[ ;&"0.5;ió;@;	[ ;ióo;;"!default;"shiny-edge-active-color;o;9;"	rgba;:{ ;@;0;iô;[o;I	;0;@;J{	;Ki ;Li;Mi ;Ni ;iôo;#;$@?;f0.20000000000000001 ;@;%[ ;&"0.2;iô;@;	[ ;iôo;

;;;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;	[ ;iöo;;"!default;"include-html-classes;o;;T;@;i÷;@;	[ ;i÷o;;"!default;"include-print-styles;o;;T;@;iø;@;	[ ;iøo;;"!default;" include-html-global-classes;o;	;"include-html-classes;@;"include_html_classes;iù;@;	[ ;iùo;

;;;["/* Media Queries */;@;	[ ;iûo;;"!default;"small-screen;o;#;$[ ;i ;@;%["px;&"
768px;iü;@;	[ ;iüo;;"!default;"medium-screen;o;#;$[ ;i ;@;%["px;&"1280px;iý;@;	[ ;iýo;;"!default;"large-screen;o;#;$[ ;i ;@;%["px;&"1440px;iþ;@;	[ ;iþo;;"!default;"screen;o;	;;O;"only screen;@;i ;@;	[ ;i o;;"!default;"
small;o:&Sass::Script::StringInterpolation
:	@mido;	;"small-screen;@;"small_screen;i:@beforeo;	;;O;"!only screen and (min-width: ;@;i;@:@aftero;	;;O;");@;i;i;@;	[ ;io;;"!default;"medium;o;P
;Qo;	;"medium-screen;@;"medium_screen;i;Ro;	;;O;" only screen and (min-width:;@;i;@;So;	;;O;");@;i;i;@;	[ ;io;;"!default;"
large;o;P
;Qo;	;"large-screen;@;"large_screen;i;Ro;	;;O;" only screen and (min-width:;@;i;@;So;	;;O;");@;i;i;@;	[ ;io;;"!default;"landscape;o;	;;O;"-only screen and (orientation: landscape);@;i;@;	[ ;io;;"!default;"portrait;o;	;;O;",only screen and (orientation: portrait);@;i;@;	[ ;io;

;;;["H/* Used to provide media query values for javascript components. */;@;	[ ;io;';(o;);*[o;+;*[o;,
;*[o:Sass::Selector::Element	:@namespace0;["	meta;." ;io:Sass::Selector::Class;["foundation-mq-small;.@;i;3o;4;5{ ;.@;i;60;.@;i;T;@;"i ;	[o;;["font-family;o;	;"
small;@;"
small;i	; ;!;@;"i ;	[ ;i	o;;["
width;o;	;"small-screen;@;"small_screen;i
; ;!;@;"i ;	[ ;i
;i;7["meta.foundation-mq-smallo;';(o;);*[o;+;*[o;,
;*[o;T	;U0;["	meta;." ;io;V;["foundation-mq-medium;.@¨;i;3o;4;5{ ;.@¨;i;60;.@¨;i;T;@;"i ;	[o;;["font-family;o;	;"medium;@;"medium;i; ;!;@;"i ;	[ ;io;;["
width;o;	;"medium-screen;@;"medium_screen;i; ;!;@;"i ;	[ ;i;i;7["meta.foundation-mq-mediumo;';(o;);*[o;+;*[o;,
;*[o;T	;U0;["	meta;." ;io;V;["foundation-mq-large;.@É;i;3o;4;5{ ;.@É;i;60;.@É;i;T;@;"i ;	[o;;["font-family;o;	;"
large;@;"
large;i; ;!;@;"i ;	[ ;io;;["
width;o;	;"large-screen;@;"large_screen;i; ;!;@;"i ;	[ ;i;i;7["meta.foundation-mq-largeo;

;;;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;	[ ;io;;"!default;"cursor-crosshair-value;o;	;;;"crosshair;@;i;@;	[ ;io;;"!default;"cursor-default-value;o;	;;;"default;@;i;@;	[ ;io;;"!default;"cursor-pointer-value;o;	;;;"pointer;@;i;@;	[ ;io;;"!default;"cursor-help-value;o;	;;;"	help;@;i;@;	[ ;io;;"!default;"cursor-text-value;o;	;;;"	text;@;i;@;	[ ;iu;[o:Sass::Script::Variable	:
@name" include-html-global-classes:@options{ :@underscored_name" include_html_global_classes:
@linei0[!o:Sass::Tree::CommentNode
:
@type:silent:@value["F/* Set box-sizing globally to handle padding and border widths */;@:@children[ ;	i!o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Universal:@namespace0:@filename" ;	i$:@sourceso:Set:
@hash{ ;@;	i$:@subject0o;;["
o;
;[o;;0;@;	i$o:Sass::Selector::Pseudo
;["before:	@arg0;@;	i$:@syntactic_type:
class;o;;{ ;@;	i$;0o;;["
o;
;[o;;0;@;	i$o;
;["
after;0;@;	i$;;;o;;{ ;@;	i$;0;@;	i$:@has_childrenT;@:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing:@keywords{ ;@;[ :@splat0;	i%:
@args[o:Sass::Script::String	;:identifier;"border-box;@;	i%;	i$:
@rule["*,
  *:before,
  *:aftero;;o;;[o;;[o;
;[o:Sass::Selector::Element	;0;["	html;" ;	i);o;;{ ;@D;	i);0o;;["
o;
;[o;)	;0;["	body;@D;	i);o;;{ ;@D;	i);0;@D;	i); T;@;!i ;[o:Sass::Tree::PropNode;["font-size;o; 	;"base-font-size;@;"base_font_size;	i):@prop_syntax:new;@;!i ;[ ;	i);	i);(["html,
  bodyo;

;;;["/* Default body styles */;@;[ ;	i+o;;o;;[o;;[o;
;[o;)	;0;["	body;" ;	i,;o;;{ ;@i;	i,;0;@i;	i,; T;@;!i ;[o;*;["background;o; 	;"body-bg;@;"body_bg;	i-;+;,;@;!i ;[ ;	i-o;*;["
color;o; 	;"body-font-color;@;"body_font_color;	i.;+;,;@;!i ;[ ;	i.o;*;["padding;o;&;;';"0;@;+;,;@;!i ;[ ;	i/o;*;["margin;o;&;;';"0;@;+;,;@;!i ;[ ;	i0o;*;["font-family;o; 	;"body-font-family;@;"body_font_family;	i1;+;,;@;!i ;[ ;	i1o;*;["font-weight;o; 	;"body-font-weight;@;"body_font_weight;	i2;+;,;@;!i ;[ ;	i2o;*;["font-style;o; 	;"body-font-style;@;"body_font_style;	i3;+;,;@;!i ;[ ;	i3o;*;["line-height;o;&;;';"1;@;+;,;@;!i ;[ ;	i4o;

;;;["F/* Set to $base-line-height to take on browser default of 150% */;@;[ ;	i4o;*;["position;o;&;;';"relative;@;+;,;@;!i ;[ ;	i5o;*;["cursor;o; 	;"cursor-default-value;@;"cursor_default_value;	i6;+;,;@;!i ;[ ;	i6;	i,;(["	bodyo;;o;;[o;;[o;
;[o;)	;0;["a;" ;	i9o;
;["
hover;0;@º;	i9;;;o;;{ ;@º;	i9;0;@º;	i9; T;@;!i ;[o;*;["cursor;o; 	;"cursor-pointer-value;@;"cursor_pointer_value;	i9;+;,;@;!i ;[ ;	i9;	i9;(["a:hovero;

;;;["B/* Grid Defaults to get images and embeds to work properly */;@;[ ;	i;o;;o;;[o;;[o;
;[o;)	;0;["img;" ;	i>;o;;{ ;@Ø;	i>;0o;;["
o;
;[o;)	;0;["object;@Ø;	i>;o;;{ ;@Ø;	i>;0o;;["
o;
;[o;)	;0;["
embed;@Ø;	i>;o;;{ ;@Ø;	i>;0;@Ø;	i>; T;@;!i ;[o;*;["max-width;o;&;;';"	100%;@;+;,;@;!i ;[ ;	i>o;*;["height;o;&;;';"	auto;@;+;,;@;!i ;[ ;	i>;	i>;(["img,
  object,
  embedo;;o;;[o;;[o;
;[o;)	;0;["object;" ;	iA;o;;{ ;@;	iA;0o;;["
o;
;[o;)	;0;["
embed;@;	iA;o;;{ ;@;	iA;0;@;	iA; T;@;!i ;[o;*;["height;o;&;;';"	100%;@;+;,;@;!i ;[ ;	iA;	iA;(["object,
  embedo;;o;;[o;;[o;
;[o;)	;0;["img;" ;	iB;o;;{ ;@(;	iB;0;@(;	iB; T;@;!i ;[o;*;["-ms-interpolation-mode;o;&;;';"bicubic;@;+;,;@;!i ;[ ;	iB;	iB;(["imgo;;o;;[o;;[o;
;[o:Sass::Selector::Id;["map_canvas;" ;	iE;o;;{ ;@>;	iE;0o;;["
o;
;[o:Sass::Selector::Class;["map_canvas;@>;	iE;o;;{ ;@>;	iE;0;@>;	iE; T;@;!i ;[o;;o;;[o;;[o;
;[o;)	;0;["img;" ;	iH;o;;{ ;@V;	iH;0o;;["
o;
;[o;)	;0;["
embed;@V;	iH;o;;{ ;@V;	iH;0o;;["
o;
;[o;)	;0;["object;@V;	iH;o;;{ ;@V;	iH;0;@V;	iH; T;@;!i ;[o;*;["max-width;o;&;;';"none !important;@;+;,;@;!i ;[ ;	iH;	iH;(["img,
    embed,
    object;	iE;(["#map_canvas,
  .map_canvaso;

;;;[",/* Miscellaneous useful HTML classes */;@;[ ;	iLo;;o;;[o;;[o;
;[o;.;["	left;" ;	iM;o;;{ ;@;	iM;0;@;	iM; T;@;!i ;[o;*;["
float;o;&;;';"left !important;@;+;,;@;!i ;[ ;	iM;	iM;(["
.lefto;;o;;[o;;[o;
;[o;.;["
right;" ;	iN;o;;{ ;@;	iN;0;@;	iN; T;@;!i ;[o;*;["
float;o;&;;';"right !important;@;+;,;@;!i ;[ ;	iN;	iN;([".righto;;o;;[o;;[o;
;[o;.;["text-left;" ;	iO;o;;{ ;@²;	iO;0;@²;	iO; T;@;!i ;[o;*;["text-align;o;&;;';"left !important;@;+;,;@;!i ;[ ;	iO;	iO;([".text-lefto;;o;;[o;;[o;
;[o;.;["text-right;" ;	iP;o;;{ ;@È;	iP;0;@È;	iP; T;@;!i ;[o;*;["text-align;o;&;;';"right !important;@;+;,;@;!i ;[ ;	iP;	iP;([".text-righto;;o;;[o;;[o;
;[o;.;["text-center;" ;	iQ;o;;{ ;@Þ;	iQ;0;@Þ;	iQ; T;@;!i ;[o;*;["text-align;o;&;;';"center !important;@;+;,;@;!i ;[ ;	iQ;	iQ;([".text-centero;;o;;[o;;[o;
;[o;.;["text-justify;" ;	iR;o;;{ ;@ô;	iR;0;@ô;	iR; T;@;!i ;[o;*;["text-align;o;&;;';"justify !important;@;+;,;@;!i ;[ ;	iR;	iR;([".text-justifyo;;o;;[o;;[o;
;[o;.;["	hide;" ;	iS;o;;{ ;@
;	iS;0;@
;	iS; T;@;!i ;[o;*;["display;o;&;;';"	none;@;+;,;@;!i ;[ ;	iS;	iS;(["
.hideo;

;;;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;@;[ ;	iUo;;o;;[o;;[o;
;[o;.;["antialiased;" ;	iY;o;;{ ;@$;	iY;0;@$;	iY; T;@;!i ;[o;*;["-webkit-font-smoothing;o;&;;';"antialiased;@;+;,;@;!i ;[ ;	iY;	iY;([".antialiasedo;

;;;["W/* Get rid of gap under images by making them display: inline-block; by default */;@;[ ;	i[o;;o;;[o;;[o;
;[o;)	;0;["img;" ;	i\;o;;{ ;@>;	i\;0;@>;	i\; T;@;!i ;[o;*;["display;o;&;;';"inline-block;@;+;,;@;!i ;[ ;	i]o;*;["vertical-align;o;&;;';"middle;@;+;,;@;!i ;[ ;	i^;	i\;(["imgo;

;;;["(/*
 * Global resets for forms
 * */;@;[ ;	iao;

;;;[";/* Make sure textarea takes on height automatically */;@;[ ;	ieo;;o;;[o;;[o;
;[o;)	;0;["textarea;" ;	if;o;;{ ;@b;	if;0;@b;	if; T;@;!i ;[o;*;["height;o;&;;';"	auto;@;+;,;@;!i ;[ ;	ifo;*;["min-height;o;&;;';"	50px;@;+;,;@;!i ;[ ;	if;	if;(["textareao;

;;;["5/* Make select elements 100% width by default */;@;[ ;	iho;;o;;[o;;[o;
;[o;)	;0;["select;" ;	ii;o;;{ ;@;	ii;0;@;	ii; T;@;!i ;[o;*;["
width;o;&;;';"	100%;@;+;,;@;!i ;[ ;	ii;	ii;(["select;i